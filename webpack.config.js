// WordPress webpack config.
const [
	scriptsConfig,
	moduleConfig,
] = require( '@wordpress/scripts/config/webpack.config' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );

// Utilities.
const path = require( 'path' );

// Add any new entry points by extending the webpack config.
module.exports = [
	scriptsConfig,
	{
		...moduleConfig,
		resolve: {
			alias: {
				pdfjs: path.resolve(
					process.cwd(),
					'node_modules/pdfjs-dist/legacy/build',
					'pdf.min.mjs'
				),
			},
		},
	},
	{
		...scriptsConfig,
		entry: {
			'scg-theme': path.resolve(
				process.cwd(),
				'src/styles',
				'scg-theme.scss'
			),
			'scg-content': path.resolve(
				process.cwd(),
				'src/styles',
				'scg-content.scss'
			),
			'scg-editor': path.resolve(
				process.cwd(),
				'src/styles',
				'scg-editor.scss'
			),
			'scg-editor-scripts': path.resolve(
				process.cwd(),
				'src/scripts',
				'scg-editor.js'
			),
			'scg-admin-login': path.resolve(
				process.cwd(),
				'src/styles',
				'scg-login.scss'
			),
		},
		plugins: [
			// Include WP's plugin config.
			...scriptsConfig.plugins,

			// Removes the empty `.js` files generated by webpack but
			// sets it after WP has generated its `*.asset.php` file.
			new RemoveEmptyScriptsPlugin( {
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
			} ),
		],
		stats: {
			warnings: false,
		},
	},
	{
		...moduleConfig,
		entry: {
			'scg-scripts': path.resolve(
				process.cwd(),
				'src/scripts',
				'scg.ts'
			),
		},
	},
];
